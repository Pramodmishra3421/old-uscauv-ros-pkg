#!/bin/bash

###########################################################################
#  uscauv-add-node
#  --------------------
#
#  Copyright (c) 2013, Dylan Foster
#  All rights reserved.
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions are
#  met:
#
#  # Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#  # Redistributions in binary form must reproduce the above
#    copyright notice, this list of conditions and the following disclaimer
#    in the documentation and/or other materials provided with the
#    distribution.
#  # Neither the name of USC AUV nor the names of its
#    contributors may be used to endorse or promote products derived from
#    this software without specific prior written permission.
#
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
#  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
#  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
#  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
#  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
#  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
#  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
#  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
#  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
#  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
###########################################################################


# Parse commands ###############################################

function usage()
{
    echo ""
    echo "Usage: `basename $0` package node [-u user] [-p project]"
    echo ""
}

if [ $# -lt 2 ]; then
    usage
    exit
fi

package_name=$1; shift
node_name=$1; shift

package_path=`rospack find $package_name`
if [ -z "$package_path" ]; then exit; fi

while (( "$#" )); do

    case $1 in
	-p ) shift
	    if [ -n "$project" ]; then
		usage
		exit
	    else
		project=$1
		shift
	    fi
	    ;;
	-u ) shift
	    if [ -z "$users" ]; then
		users="$1"
	    else
		users="$users, $1"
	    fi
	    shift
	    ;;
	* ) 
	    if [ -n "$1" ]; then
		usage
		exit
	    else
		shift
	    fi
	    ;;
    esac
done

if [ -z "$project" ]; then project="USC AUV"; fi

# Process Text #################################################

node_name=`echo $node_name | tr " " _`
package_name=`echo $package_name | tr " " _`

NodeName=`echo $node_name | sed 's/[a-z]/\U&/' |sed 's/_[a-z]/\U\0/g' | tr -d _`
NODENAME=`echo $node_name | sed 's/[a-z]/\U&/g'| tr -d _`

PackageName=`echo $package_name | sed 's/[a-z]/\U&/' |sed 's/_[a-z]/\U\0/g' | tr -d _`
PACKAGENAME=`echo $package_name | sed 's/[a-z]/\U&/g' | tr -d _`

PROJECTNAME=`echo $project | tr -d " " | tr -d _ | sed 's/[a-z]/\U&/g'`

header_file="$node_name""_node.h"
cpp_file="$node_name""_node.cpp"
launch_file="$node_name.launch"
cmake_file="CMakeLists.txt"

include_path="include/$package_name"
node_path="nodes"
launch_path="launch"

header_path="$include_path/$header_file"
cpp_path="$node_path/$cpp_file"
launchfile_path="$launch_path/$launch_file"
cmake_path="$cmake_file"

IFNDEF_TEXT="$PROJECTNAME""_""$PACKAGENAME""_""$NODENAME"""

header_text="
#ifndef $IFNDEF_TEXT
#define $IFNDEF_TEXT

// ROS
#include <ros/ros.h>

// uscauv
#include <uscauv_common/base_node.h>

class "$NodeName"Node: public BaseNode
{
  
 public:
  "$NodeName"Node(): BaseNode(\"$NodeName\")
   {
   }

 private:

  // Running spin() will cause this function to be called before the node begins looping the spinOnce() function.
  void spinFirst()
     {
	 
     }  

  // Running spin() will cause this function to get called at the loop rate until this node is killed.
  void spinOnce()
     {

     }

};

#endif // $IFNDEF_TEXT"

cpp_text="
#include <$package_name/$header_file>

// Initialize "$NodeName"Node and begin looping.
int main(int argc, char ** argv)
{
  ros::init(argc, argv, \"$node_name\");

  "$NodeName"Node $node_name;

  $node_name.spin();

  return 0;
}"

launch_text="
<launch>
  <arg name=\"pkg\" value=\"$package_name\" />
  <arg name=\"name\" value=\"$node_name\" />
  <arg name=\"type\" default=\"\$(arg name)\" />
  <arg name=\"rate\" default=\"30\" />
  <arg name=\"args\" value=\"_loop_rate:=\$(arg rate)\" />

  <node
      pkg=\"\$(arg pkg)\"
      type=\"\$(arg type)\"
      name=\"\$(arg name)\"
      args=\"\$(arg args)\"
      output=\"screen\" />
  
</launch>"

cmake_text="

# Auto-generated by uscauv-add-node
rosbuild_add_executable( $node_name $cpp_path )"

# Make the magic happen ########################################

cd $package_path

if [ ! -d  "$include_path" ]; then mkdir -vp $include_path; fi
if [ ! -d  "$node_path" ];    then mkdir -vp $node_path;    fi
if [ ! -d  "$launch_path" ];  then mkdir -vp $launch_path;  fi

echo "$header_text" > $header_path
echo "$cpp_text" > $cpp_path
echo "$launch_text" > $launchfile_path
# Note that this one is appended:
echo "$cmake_text" >> $cmake_path

uscauv-add-license -u "$users" -p "$project" -f $header_path $cpp_path
uscauv-print-logo
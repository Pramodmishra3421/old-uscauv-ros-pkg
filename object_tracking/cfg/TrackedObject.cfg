#!/usr/bin/env python

PACKAGE='object_tracking'
import roslib; roslib.load_manifest(PACKAGE)

from driver_base.msg import SensorLevels
from dynamic_reconfigure.parameter_generator import *

gen = ParameterGenerator()

gen.add( "predict_variance", double_t, SensorLevels.RECONFIGURE_RUNNING, "Variance for a diagonal control covariance matrix.", 1, 0.000001,  100 )
gen.add( "update_variance", double_t, SensorLevels.RECONFIGURE_RUNNING, "Variance for a diagonal update covariance matrix.", 1, 0.000001,  100 )
gen.add( "initial_variance", double_t, SensorLevels.RECONFIGURE_RUNNING, "Variance for a diagonal state covariance matrix.", 1, 0.000001,  100000 )
gen.add( "uncertainty_radius", double_t, SensorLevels.RECONFIGURE_RUNNING, "Spawn a new kalman filter if measurement probability falls below.", 0.000001, 0.00000001, 1.0)
gen.add( "filter_kill_thresh", double_t, SensorLevels.RECONFIGURE_RUNNING, "Kill kalman filters if their covariance determinant exceeds this threshold", 10e20, 1, 10e35)
gen.add( "exclude_distance", double_t, SensorLevels.RECONFIGURE_RUNNING, "In meters", 0.75, 0.00, 10.0)
gen.add( "exclude_angle", double_t, SensorLevels.RECONFIGURE_RUNNING, "In radian", 0.1, 0.00, 10.0)

exit(gen.generate(PACKAGE, "tracked_object", "TrackedObject"))

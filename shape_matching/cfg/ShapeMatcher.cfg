#!/usr/bin/env python

PACKAGE='shape_matching'
import roslib; roslib.load_manifest(PACKAGE)

from math import pi

from driver_base.msg import SensorLevels
from dynamic_reconfigure.parameter_generator import *

gen = ParameterGenerator()
#Name            Type   Reconfiguration level             Description         Default Min Max
gen.add( "kernel_size",          int_t, SensorLevels.RECONFIGURE_RUNNING, "Size of Gaussian blur kernel", 25,    3,    1023 )
# gen.add( "canny_lower",          int_t, SensorLevels.RECONFIGURE_RUNNING, "Upper threshold for Canny ", 255,    0,    255 )
# gen.add( "canny_upper",          int_t, SensorLevels.RECONFIGURE_RUNNING, "Lower threshold for Canny", 0,    0,    255 )
gen.add( "signature_size",       int_t, SensorLevels.RECONFIGURE_RUNNING, "Bins for radial histogram thing", 20,    5,    1023 )
gen.add( "emd_boundary",       double_t, SensorLevels.RECONFIGURE_RUNNING, "Max EMD to be considered a match ", 0.15,    0,    1.0 )


exit(gen.generate(PACKAGE, "dynamic_reconfigure_node", "ShapeMatcher"))

#!/usr/bin/env python

PACKAGE='auv_missions'
import roslib; roslib.load_manifest(PACKAGE)

from driver_base.msg import SensorLevels
from dynamic_reconfigure.parameter_generator import *

gen = ParameterGenerator()

gen.add( "start_depth", double_t, SensorLevels.RECONFIGURE_RUNNING, "My very own dynamical parameter.", 0.5,     0,  100 )

gen.add( "target1", str_t, SensorLevels.RECONFIGURE_RUNNING, "My very own dynamical parameter.", "buoy" )
gen.add( "target1_distance", double_t, SensorLevels.RECONFIGURE_RUNNING, "My very own dynamical parameter.", 0,     0,  100 )
gen.add( "target1_depth", double_t, SensorLevels.RECONFIGURE_RUNNING, "My very own dynamical parameter.", 2.5,     0,  100 )
gen.add( "target1_hold_time", double_t, SensorLevels.RECONFIGURE_RUNNING, "My very own dynamical parameter.", 3.0,     0,  100 )
gen.add( "target1_attack_time", double_t, SensorLevels.RECONFIGURE_RUNNING, "My very own dynamical parameter.", 15,     1,  600 )

gen.add( "target2", str_t, SensorLevels.RECONFIGURE_RUNNING, "My very own dynamical parameter.", "buoy" )
gen.add( "target2_distance", double_t, SensorLevels.RECONFIGURE_RUNNING, "My very own dynamical parameter.", 0,     0,  100 )
gen.add( "target2_depth", double_t, SensorLevels.RECONFIGURE_RUNNING, "My very own dynamical parameter.", 2.5,     0,  100 )
gen.add( "target2_hold_time", double_t, SensorLevels.RECONFIGURE_RUNNING, "My very own dynamical parameter.", 3.0,     0,  100 )
gen.add( "target2_attack_time", double_t, SensorLevels.RECONFIGURE_RUNNING, "My very own dynamical parameter.", 15,     1,  600 )

gen.add( "hedge_depth", double_t, SensorLevels.RECONFIGURE_RUNNING, "My very own dynamical parameter.", 0.2,     0,  100 )
gen.add( "hedge_ori", double_t, SensorLevels.RECONFIGURE_RUNNING, "My very own dynamical parameter.", 0.2,     0,  100 )

gen.add( "gate_time", double_t, SensorLevels.RECONFIGURE_RUNNING, "My very own dynamical parameter.", 40,     0,  600 )

gen.add( "retreat_time", double_t, SensorLevels.RECONFIGURE_RUNNING, "My very own dynamical parameter.", 20,     0,  600 )
gen.add( "retreat_vel", double_t, SensorLevels.RECONFIGURE_RUNNING, "My very own dynamical parameter.", 2,     0.1,  10 )


################################################################################################################################
# Parameter Examples. Add your own parameters below
################################################################################################################################

# Valid types: bool_t, int_t, double_t, str_t

#          Name        Type   Reconfiguration level             Description                         Default Min Max
# gen.add( "my_param", int_t, SensorLevels.RECONFIGURE_RUNNING, "My very own dynamical parameter.", 10,     1,  100 )

# Example enum:
# size_enum = gen.enum([ gen.const("Small", int_t, 0, "A small constant"),
#                   gen.const("Medium", int_t, 1, "A medium constant"),
#                   gen.const("Large", int_t, 2, "A large constant"),
#                   gen.const("ExtraLarge", int_t, 3, "An extra large constant") ],
#                   "An enum to set size")

# gen.add("size", int_t, 0, "A size parameter which is edited via an enum", 1, 0, 3, edit_method=size_enum)

################################################################################################################################
################################################################################################################################


exit(gen.generate(PACKAGE, "mission", "Mission"))

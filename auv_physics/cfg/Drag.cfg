#!/usr/bin/env python

PACKAGE='auv_physics'

from dynamic_reconfigure.parameter_generator_catkin import *
from driver_base.msg import SensorLevels

gen = ParameterGenerator()

gen.add( "x", double_t, SensorLevels.RECONFIGURE_RUNNING, "X drag coefficient.", 0.0001,     0,  10 )
gen.add( "y", double_t, SensorLevels.RECONFIGURE_RUNNING, "Y drag coefficient.", 0.0001,     0,  10 )
gen.add( "z", double_t, SensorLevels.RECONFIGURE_RUNNING, "Z drag coefficient.", 0.0001,     0,  10 )

################################################################################################################################
# Parameter Examples. Add your own parameters below
################################################################################################################################

# Valid types: bool_t, int_t, double_t, str_t

#          Name        Type   Reconfiguration level             Description                         Default Min Max
# gen.add( "my_param", int_t, SensorLevels.RECONFIGURE_RUNNING, "My very own dynamical parameter.", 10,     1,  100 )

# Example enum:
# size_enum = gen.enum([ gen.const("Small", int_t, 0, "A small constant"),
#                   gen.const("Medium", int_t, 1, "A medium constant"),
#                   gen.const("Large", int_t, 2, "A large constant"),
#                   gen.const("ExtraLarge", int_t, 3, "An extra large constant") ],
#                   "An enum to set size")

# gen.add("size", int_t, 0, "A size parameter which is edited via an enum", 1, 0, 3, edit_method=size_enum)

################################################################################################################################
################################################################################################################################


exit(gen.generate(PACKAGE, "drag", "Drag"))
